name: 'Armbian/build'
description: 'Armbian Linux build framework'
inputs:
  board:
    required: true
  flavor:
    required: true
  release-id:
    required: false
  github-token:
    required: false
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: chainsx/armbian-riscv-build
        ref: main
        path: build
    - name: Set env
      shell: bash
      run: |
        if [ ${{ inputs.flavor }} == "debian" ]
        then
          echo "release=sid" >> $GITHUB_ENV
          echo "build-minimal=no" >> $GITHUB_ENV
          echo "build-desktop=no" >> $GITHUB_ENV
          echo "expert=yes" >> $GITHUB_ENV
        elif [ ${{ inputs.flavor }} == "ubuntu" ]
        then
          echo "release=focal" >> $GITHUB_ENV
          echo "build-minimal=no" >> $GITHUB_ENV
          echo "build-desktop=yes" >> $GITHUB_ENV
          echo "desktop-environment=xfce" >> $GITHUB_ENV
          echo "desktop-environment-config-name=config_base" >> $GITHUB_ENV
          echo "expert=yes" >> $GITHUB_ENV
          echo "desktop_appgroups_selected=\"3dsupport desktop_tools\"" >> $GITHUB_ENV
        fi
    - name: Build
      shell: bash
      run: |
        cd ./build
        touch .ignore_changes
        
        
        if [ ${{ inputs.board }} == "licheepi-4a" ]; then
          mkdir userpatches
          echo "update-alternatives --set iptables /usr/sbin/iptables-legacy" > userpatches/customize-image.sh
          echo "update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy" >> userpatches/customize-image.sh
        fi
    
        ./compile.sh \
        BOARD=${{ inputs.board }} \
        BRANCH=${{ inputs.branch }} \
        RELEASE=${{ env.release }} \
        BUILD_MINIMAL=${{ env.build-minimal }} \
        BUILD_DESKTOP=${{ env.build-desktop }} \
        KERNEL_ONLY=no \
        KERNEL_CONFIGURE=no \
        DESKTOP_ENVIRONMENT=${{ env.desktop-environment }} \
        DESKTOP_ENVIRONMENT_CONFIG_NAME=${{ env.desktop-environment-config-name }} \
        DESKTOP_APPGROUPS_SELECTED=${{ env.desktop_appgroups_selected }} \
        EXPERT=${{ env.expert }} \
        COMPRESS_OUTPUTIMAGE=sha,gpg,xz
    - name: Upload
      if: inputs.release-id != '' && inputs.github-token != ''
      uses: xresloader/upload-to-github-release@v1
      env:
          GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        release_id: ${{ inputs.release-id }}
        file: "./build/output/images/*.img.xz;./build/output/images/*.img.xz.sha;./build/output/debs/linux-*.deb;./build/cache/sources/*.bin"
        draft: false
    - name: Rollback release
      if: failure() && inputs.release-id != '' && inputs.github-token != ''
      uses: author/action-rollback@stable
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        release_id: ${{ inputs.release-id }}
